#include "Scavtrap.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */

/* static variable code */

/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */

Scavtrap::Scavtrap() 
{
	this->set_Hit_point(100);
	this->set_Energy_point(50);
	this->set_Attack_damage(20);
}

Scavtrap::Scavtrap(const std::string& string)
{
	std::cout << "ScavTrap name <" << string << "> Borned !" << std::endl;
	this->set_Name(string);
	this->set_Hit_point(100);
	this->set_Energy_point(50);
	this->set_Attack_damage(20);
}

Scavtrap::Scavtrap(const Scavtrap& copy)
{
	this->operator=(copy);
	this->set_Hit_point(100);
	this->set_Energy_point(50);
	this->set_Attack_damage(20);
}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */

Scavtrap::~Scavtrap()
{
	std::cout << "Scavtrap Destroyed. Named <" << this->get_Name() << "> !" << std::endl;
	/* destructor code */
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

Scavtrap& Scavtrap::operator=(const Scavtrap& obj)
{
	if (this == &obj)
		return (*this);
	/* overload= code */
	return (*this);
}

// std::ostream&
// operator<<(std::ostream& out, const Scavtrap& Scavtrap)
// {
// 	/* ostream output overload code */
// 	return (out);
// }

/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

/* getter code */

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

/* setter code */

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* exception code */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */
void Scavtrap::guardGate()
{
	std::cout << "ScavTrap <" << this->get_Name() << "> Start to Guard The gate! " << std::endl;
}
